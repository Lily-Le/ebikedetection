# Ultralytics YOLO ðŸš€, GPL-3.0 license
# Builds ultralytics/ultralytics:latest image on DockerHub https://hub.docker.com/r/ultralytics/ultralytics
# Image is CUDA-optimized for YOLOv8 single/multi-GPU training and inference

# Start FROM NVIDIA PyTorch image https://ngc.nvidia.com/catalog/containers/nvidia:pytorch
# FROM nvcr.io/nvidia/pytorch:22.12-py3
FROM pytorch/pytorch:1.11.0-cuda11.3-cudnn8-runtime

# Downloads to user config dir
ADD https://ultralytics.com/assets/Arial.ttf https://ultralytics.com/assets/Arial.Unicode.ttf /root/.config/Ultralytics/

# Remove torch nightly and install torch stable
RUN rm -rf /opt/pytorch  # remove 1.2GB dir
# RUN pip uninstall -y torchtext pillow torch torchvision
# RUN pip install --no-cache torch torchvision

# Install linux packages
RUN apt update && apt install --no-install-recommends -y zip htop screen libgl1-mesa-glx git
RUN apt-get install -y libgtk2.0-dev pkg-config

# Create working directory
RUN mkdir -p /usr/src/ultralytics
WORKDIR /usr/src/ultralytics

# Copy contents
# COPY . /usr/src/app  (issues as not a .git directory)
RUN git clone https://github.com/ultralytics/ultralytics /usr/src/ultralytics

# Install pip packages
RUN python -m pip install --upgrade pip wheel
RUN pip install --no-cache ultralytics albumentations comet gsutil notebook
RUN pip uninstall -y opencv-python
RUN pip uninstall -y opencv-python-headless
# RUN pip install opencv-python==4.8.0.74 
RUN pip install opencv-python-headless==4.8.0.74
# RUN pip install opencv-contrib-python==4.8.0.74 
RUN pip install opencv-contrib-python-headless==4.8.0.74

#Install dlib 
RUN pip install boost -i https://mirrors.aliyun.com/pypi/simple/
RUN pip install cmake -i https://mirrors.aliyun.com/pypi/simple/
RUN pip install dlib

# Set environment variables
# ENV OMP_NUM_THREADS=1


